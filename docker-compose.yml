version: '3.4'

services:
  airline.api:
    image: ${DOCKER_REGISTRY-}airlinemanagementapi
    container_name: AirlineManagementSystem
    build:
      context: .
      dockerfile: airline.management.api/Dockerfile
    ports:
      - "8081:80"
    depends_on:      
      - flightdetail.api   
      - rabbitMq
      - mssqlserver
    environment:
      - ServicesEndpoints__FlightDetailsURL=http://flightdetail.api/api/
      - ConnectionStrings__DefaultConnection=Data Source=mssqlserver,1433;Initial Catalog=Gateway;User Id=sa;Password=Password123; MultipleActiveResultSets=true
      - ApplicationConfig__EventBusHost=rabbitMq
      - ApplicationConfig__EventBusUser=demo
      - ApplicationConfig__EventBusPassword=Password123

  airline.customers.service:
    image: ${DOCKER_REGISTRY-}airlinecustomersservice
    container_name: CustomerService
    build:
      context: .      
      dockerfile: airline.customers.service/Dockerfile
    depends_on:      
      - rabbitMq
      - mssqlserver
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=mssqlserver,1433;Initial Catalog=Customers;User Id=sa;Password=Password123; MultipleActiveResultSets=true
      - ApplicationConfig__EventBusHost=rabbitMq
      - ApplicationConfig__EventBusUser=demo
      - ApplicationConfig__EventBusPassword=Password123

  flightdetail.api:
    image: ${DOCKER_REGISTRY-}airlineflightdetailapi
    container_name: FlightApi
    build:
      context: .      
      dockerfile: airline.flightdetail.api/Dockerfile
    ports:
      - "8082:80"
    depends_on:      
      - mssqlserver
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=mssqlserver,1433;Initial Catalog=FlightDetails;User Id=sa;Password=Password123; MultipleActiveResultSets=true

  notification.service:
    image: ${DOCKER_REGISTRY-}airlinenotificationservice
    container_name: NotificationService
    build:
      context: .     
      dockerfile: airline.notification.service/Dockerfile
    depends_on:      
      - rabbitMq      
    environment:    
      - ApplicationConfig__EventBusHost=rabbitMq
      - ApplicationConfig__EventBusUser=demo
      - ApplicationConfig__EventBusPassword=Password123

  orchestrator.service:
    image: ${DOCKER_REGISTRY-}airlineorchestratorservice
    container_name: OrchestratorService
    build:      
      context: .
      dockerfile: airline.orchestrator.service/Dockerfile
    depends_on:      
      - rabbitMq
      - mssqlserver
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=mssqlserver,1433;Initial Catalog=ServiceState;User Id=sa;Password=Password123; MultipleActiveResultSets=true
      - ApplicationConfig__EventBusHost=rabbitMq
      - ApplicationConfig__EventBusUser=demo
      - ApplicationConfig__EventBusPassword=Password123

  orders.service:
    image: ${DOCKER_REGISTRY-}airlineordersservice
    container_name: OrderService
    build:
      context: .      
      dockerfile: airline.orders.service/Dockerfile
    depends_on:      
      - rabbitMq
      - mssqlserver
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=mssqlserver,1433;Initial Catalog=Orders;User Id=sa;Password=Password123; MultipleActiveResultSets=true  
      - ApplicationConfig__EventBusHost=rabbitMq
      - ApplicationConfig__EventBusUser=demo
      - ApplicationConfig__EventBusPassword=Password123

  payment.service:
    image: ${DOCKER_REGISTRY-}airlinepaymentservice
    container_name: PaymentService
    build:
      context: .
      args:
      - commandLineArgs=environment=Development
      dockerfile: airline.payment.service/Dockerfile
    depends_on:      
      - rabbitMq
      - mssqlserver
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=mssqlserver,1433;Initial Catalog=Payments;User Id=sa;Password=Password123; MultipleActiveResultSets=true  
      - ApplicationConfig__EventBusHost=rabbitMq
      - ApplicationConfig__EventBusUser=demo
      - ApplicationConfig__EventBusPassword=Password123
   
  rabbitMq:
    image: rabbitmq:3-management 
    container_name: RabbitMq
    ports: 
      - "5672:5672"
      - "4000:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=demo
      - RABBITMQ_DEFAULT_PASS=Password123
  
  mssqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest    
    container_name: MsSqlServer
    ports: 
      - "1434:1433"   
    #volumes:
    # - mssqlserver:/var/opt/mssql
    #  - sqlvolume:/var/opt/mssql
    environment:
      - SA_PASSWORD=Password123
      - ACCEPT_EULA=Y
    #command: 
      #- /bin/sh -c "(/opt/mssql/bin/sqlservr &) && sleep 10s && /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password123 -d master -i Customers.sql"
      #- /bin/sh -c "(/opt/mssql/bin/sqlservr &) && sleep 10s && /opt/mssql-tools/bin/sqlcmd -S mssqlserver,1433 -U sa -P Password123 -d master -i Customers.sql"
      #- /bin/sh -c "(/opt/mssql/bin/sqlservr &) && sleep 10s && /opt/mssql-tools/bin/sqlcmd -S mssqlserver,1433 -U sa -P Password123 -d master -i Customers.sql"
      #- /bin/sh -c "(/opt/mssql/bin/sqlservr &) && sleep 10s && /opt/mssql-tools/bin/sqlcmd -S mssqlserver,1433 -U sa -P Password123 -d master -i Customers.sql"
      #- /bin/sh -c "(/opt/mssql/bin/sqlservr &) && sleep 10s && /opt/mssql-tools/bin/sqlcmd -S mssqlserver,1433 -U sa -P Password123 -d master -i Customers.sql"
      #- /bin/sh -c "(/opt/mssql/bin/sqlservr &) && sleep 10s && /opt/mssql-tools/bin/sqlcmd -S mssqlserver,1433 -U sa -P Password123 -d master -i Customers.sql"